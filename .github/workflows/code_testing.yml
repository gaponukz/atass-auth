name: code-testing

on:
  push:
    branches:
      - main
      - sql

jobs:
  architecture:
    name: Run all app architecture tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Run architecture tests
        run: go test ./tests/architecture

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [architecture]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Run unit tests for registration
        run: go test ./tests/unit/registration
      - name: Run unit tests for password resetting
        run: go test ./tests/unit/resetpassword
      - name: Run unit tests for sign in
        run: go test ./tests/unit/signin
      - name: Run unit tests for user settings
        run: go test ./tests/unit/settings

  golangci:
    name: Run linter
    runs-on: ubuntu-latest
    needs: [architecture]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          only-new-issues: true
  e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    needs: [architecture, unit-tests]
    services:
      redis:
        image: redis/redis-stack-server:latest
        ports:
          - 6379:6379
        options: --name redis-stack-server
      
      postgres:
        image: postgres:latest
        options: --name my-postgres -e POSTGRES_USER=myuser -e POSTGRES_PASSWORD=mypassword -e POSTGRES_DB=users postgres
        ports:
          - "5432:5432"
      
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Build test Go app
        run: go build -o test-app cmd/for_e2e/main.go
      - name: Start test Go app
        run: ./test-app &
      - name: Install Python and pytest
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r tests/e2e/requirements.txt
      - name: Wait for Go app to start
        run: sleep 13
      - name: Run end-to-end tests
        run: pytest tests/e2e/e2e_test.py
              
  docker:
    name: Publishes to Docker Hub
    runs-on: ubuntu-latest
    needs: [e2e, golangci]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: gaponukz/atassauth:latest
