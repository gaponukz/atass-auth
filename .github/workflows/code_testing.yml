name: code-testing

on:
  push:


jobs:
  architecture:
    name: Run all app architecture tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Run architecture tests
        run: go test ./tests/architecture

  security-tests:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3
      - name: Run Gosec Security Scanner
        uses: securego/gosec@master
        with:
          args: -exclude=G104 ./...

  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [architecture]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: Run unit tests for registration
        run: go test ./tests/unit/registration
      - name: Run unit tests for password resetting
        run: go test ./tests/unit/resetpassword
      - name: Run unit tests for sign in
        run: go test ./tests/unit/signin
      - name: Run unit tests for user settings
        run: go test ./tests/unit/settings
      - name: Run unit tests for session
        run: go test ./tests/unit/session

  golangci:
    name: Run linter
    runs-on: ubuntu-latest
    needs: [architecture]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          only-new-issues: true

  e2e:
    name: Run end-to-end tests
    runs-on: ubuntu-latest
    needs: [architecture, unit-tests]
    steps:
    - name: Checkout
      uses: actions/checkout@v1

    - name: Start containers
      id: start-containers
      run: |
        docker-compose -f "docker-compose-test.yml" up -d --build
        sleep 30
        docker-compose -f "docker-compose-test.yml" logs

    - name: Install Python and pytest
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: pip install -r tests/e2e/requirements.txt
    - name: Run end-to-end tests
      run: pytest tests/e2e/e2e_test.py
      if: steps.start-containers.outcome == 'success'

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose-test.yml" down
              
  docker:
    name: Publishes to Docker Hub
    runs-on: ubuntu-latest
    needs: [e2e, golangci, security-tests]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: gaponukz/atassauth:latest
